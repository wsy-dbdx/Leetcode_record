一定可以到达最后，求到达最后需要的最短步数。
这个题用动态规划也可以做，但时间很久。想一下其实没有必要算每一个地方可以到达的所有地方求最少，只要选一个最远的即可，也就是在一个位置能跳到的最远地方中选一个能跳最远的。
用i来进行迭代表示现在的位置，res表示总的步数，max表示全局可以到达的最远位置（主要由i来更新），end表示此时可以到达的最远距离，也就是不用再跳一步已经可以到的最远距离。什么时候更新步数呢，就是当i等于end的时候需要再跳一步。
记得是跳到最后一个就够了，所以直接不用遍历最后一个。

```java
class Solution {
    public int jump(int[] nums) {
        if(nums.length==0)return 0;
        int max=0,end=0,res=0;
        for(int i=0;i<nums.length-1;i++){
            if(max<nums[i]+i){
                max=nums[i]+i;
            }
            if(i==end){
                res++;
                end=max;
            }
        }
        return res;
    }
}
```
